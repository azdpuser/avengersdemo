# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: Gradle@2
  inputs:
    workingDirectory: '$(system.defaultWorkingDirectory)/gs-rest-service'
    gradleWrapperFile: '$(system.defaultWorkingDirectory)/gs-rest-service/gradlew'
    gradleOptions: '-Xmx1024m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Free Trial(369357ef-288d-4815-84ba-70584847f8c1)'
    azureContainerRegistry: '{"loginServer":"avengersx.azurecr.io", "id" : "/subscriptions/369357ef-288d-4815-84ba-70584847f8c1/resourceGroups/avengersx/providers/Microsoft.ContainerRegistry/registries/avengersx"}'
    dockerComposeFile: '$(system.defaultWorkingDirectory)/gs-rest-service/docker-compose.yml'
    action: 'Build services'
    additionalImageTags: '$(Build.BuildNumber)'
    currentWorkingDirectory: '$(System.DefaultWorkingDirectory)/gs-rest-service'